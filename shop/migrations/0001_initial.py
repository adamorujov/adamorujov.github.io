# Generated by Django 4.0.3 on 2022-04-17 12:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('code', models.CharField(max_length=6)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtotal', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='PageSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_title', models.CharField(max_length=300)),
                ('home_meta_description', models.TextField()),
                ('home_meta_keywords', models.TextField()),
                ('products_title', models.CharField(max_length=300)),
                ('products_meta_description', models.TextField()),
                ('products_meta_keywords', models.TextField()),
                ('first_field_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('first_field_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('first_field_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('first_field_link', models.URLField(blank=True, max_length=250, null=True, verbose_name='Link')),
                ('first_field_link_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Link name')),
                ('trending_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('trending_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('trending_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('trending_link', models.URLField(blank=True, max_length=250, null=True, verbose_name='Link')),
                ('trending_link_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Link name')),
                ('middle_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('middle_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('middle_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('middle_link', models.URLField(blank=True, max_length=250, null=True, verbose_name='Link')),
                ('middle_link_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Link name')),
                ('last_field_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
                ('last_field_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('last_field_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
                ('last_field_link', models.URLField(blank=True, max_length=250, null=True, verbose_name='Link')),
                ('last_field_link_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Link name')),
                ('about', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(blank=True, max_length=250, null=True)),
                ('telephone', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('price', models.FloatField(default=0)),
                ('discount_price', models.FloatField(default=0)),
                ('star_point', models.FloatField(default=0)),
                ('in_stock', models.BooleanField(default=True)),
                ('number_in_stock', models.IntegerField(default=0)),
                ('sale_number', models.IntegerField(default=0)),
                ('description', models.TextField()),
                ('gender', models.CharField(choices=[('Men', 'Men'), ('Women', 'Women'), ('Kid', 'Kid'), ('Unisex', 'Unisex')], default='Unisex', max_length=6)),
                ('is_featured', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publication date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Modified date')),
                ('product_meta_description', models.TextField(default='')),
                ('product_meta_keywords', models.TextField(default='')),
                ('categories', models.ManyToManyField(blank=True, related_name='category_products', to='shop.category')),
                ('colors', models.ManyToManyField(blank=True, related_name='color_products', to='shop.color')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.SmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_wishlistitems', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_wishlistitems', to='shop.product')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Social media name')),
                ('link', models.URLField(max_length=250, verbose_name='Account link')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialmediaaccounts', to='shop.pagesettings')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='RecentViewedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recentviewedproducts', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_recentviewedproducts', to='shop.product')),
            ],
            options={
                'ordering': ('-viewed_date',),
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'verbose_name': 'Product image',
                'verbose_name_plural': 'Product images',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProductDescriptionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'verbose_name': 'Product description image',
                'verbose_name_plural': 'Product description images',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.sale'),
        ),
        migrations.AddField(
            model_name='product',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_products', to='shop.shop'),
        ),
        migrations.AddField(
            model_name='product',
            name='sizes',
            field=models.ManyToManyField(blank=True, related_name='size_products', to='shop.size'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.SmallIntegerField(default=0)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_orderitems', to='shop.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='product_orderitems', to='shop.product')),
            ],
            options={
                'verbose_name': 'Order item',
                'verbose_name_plural': 'Order items',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100)),
                ('rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='shop.product')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('link', models.URLField(blank=True, max_length=250, null=True)),
                ('link_name', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banners', to='shop.pagesettings')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
    ]
